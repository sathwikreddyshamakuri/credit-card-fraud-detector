name: Build and Push to ECR

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'app/**'
      - 'Dockerfile'
      - 'requirements.txt'

env:
  AWS_REGION: us-east-1
  ECR_REPO: ccfd-repo

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      # Use access key secrets (simplest). If you later switch to OIDC, replace this step.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR repo
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPO" --region "$AWS_REGION" >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name "$ECR_REPO" --region "$AWS_REGION"

      - name: Build and push image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
        run: |
          docker build -t "$ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG" -f Dockerfile .
          docker push "$ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG"

      - name: Print image URI
        run: echo "IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/$ECR_REPO:latest"
