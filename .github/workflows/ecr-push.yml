name: Build & Push Docker image to ECR

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - "Dockerfile"
      - "requirements.txt"
      - "**/*.py"
      - ".github/workflows/ecr-push.yml"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      id-token: write    # for OIDC (role-based) auth
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Choose ONE auth method ---
      # Method 1 (recommended): OIDC role (no long-lived secrets)
      - name: Configure AWS credentials (OIDC)
        if: ${{ vars.AWS_ROLE_TO_ASSUME != '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_REGION || 'us-east-1' }}

      # Method 2 (fallback): Access keys stored as GitHub secrets
      - name: Configure AWS credentials (access keys)
        if: ${{ vars.AWS_ROLE_TO_ASSUME == '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION || 'us-east-1' }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set image vars
        id: vars
        run: |
          echo "IMAGE=${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY || 'credit-card-fraud-detector' }}" >> $GITHUB_OUTPUT
          echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ steps.vars.outputs.IMAGE }}:${{ steps.vars.outputs.TAG }}
            ${{ steps.vars.outputs.IMAGE }}:latest
