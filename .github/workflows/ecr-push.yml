name: Build & Push to ECR

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
    paths:
      - "Dockerfile"
      - "requirements.txt"
      - "**/*.py"
      - ".github/workflows/ecr-push.yml"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      ECR_REPO: ccfd  # <-- set to your actual ECR repo name

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPO" --region "$AWS_REGION" >/dev/null 2>&1 || \
          aws ecr create-repository \
            --repository-name "$ECR_REPO" \
            --image-scanning-configuration scanOnPush=true \
            --encryption-configuration encryptionType=AES256 \
            --region "$AWS_REGION"

      - name: Build and push :latest and :sha7
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          GIT_SHA: ${{ github.sha }}
        run: |
          set -e
          SHORT_SHA=${GIT_SHA::7}
          docker build -t "$ECR_REGISTRY/$ECR_REPO:latest" -t "$ECR_REGISTRY/$ECR_REPO:$SHORT_SHA" -f Dockerfile .
          docker push "$ECR_REGISTRY/$ECR_REPO:latest"
          docker push "$ECR_REGISTRY/$ECR_REPO:$SHORT_SHA"

          {
            echo "### Pushed images"
            echo "- \`$ECR_REGISTRY/$ECR_REPO:latest\`"
            echo "- \`$ECR_REGISTRY/$ECR_REPO:$SHORT_SHA\`"
          } >> "$GITHUB_STEP_SUMMARY"
